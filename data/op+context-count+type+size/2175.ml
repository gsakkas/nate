
let rec clone x n =
  let rec helper xs sub depth =
    match depth > 0 with
    | false  -> xs
    | true  -> helper (sub :: xs) sub (depth - 1) in
  helper [] x n;;

let rec padZero l1 l2 =
  let sizeDif = (List.length l1) - (List.length l2) in
  let appendS = clone 0 (abs sizeDif) in
  if sizeDif < 0 then ((appendS @ l1), l2) else (l1, (appendS @ l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      match x with
      | (op1,op2) ->
          let res = op1 + op2 in
          let (p1,p2) = a in
          (match p2 with
           | [] -> [res / 10; res mod 10]
           | a::b ->
               let re = a + (res mod 10) in (re / 10) :: (re mod 10) :: b) in
    let base = ([], []) in
    let args = List.combine (List.rev l1) (List.rev l2) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;


(* fix

let rec clone x n =
  let rec helper xs sub depth =
    match depth > 0 with
    | false  -> xs
    | true  -> helper (sub :: xs) sub (depth - 1) in
  helper [] x n;;

let rec padZero l1 l2 =
  let sizeDif = (List.length l1) - (List.length l2) in
  let appendS = clone 0 (abs sizeDif) in
  if sizeDif < 0 then ((appendS @ l1), l2) else (l1, (appendS @ l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      match x with
      | (op1,op2) ->
          let res = op1 + op2 in
          let (p1,p2) = a in
          (match p2 with
           | [] -> (p1, [res / 10; res mod 10])
           | a::b ->
               let re = a + (res mod 10) in
               (p1, ((re / 10) :: (re mod 10) :: b))) in
    let base = ([], []) in
    let args = List.combine (List.rev l1) (List.rev l2) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

*)

(* changed spans
(25,20)-(25,42)
(27,46)-(27,74)
(28,17)-(28,19)
(28,21)-(28,23)
(31,20)-(31,27)
(31,28)-(31,30)
(31,31)-(31,33)
*)

(* type error slice
(2,4)-(7,18)
(2,15)-(7,16)
(2,17)-(7,16)
(3,3)-(7,16)
(3,3)-(7,16)
(3,18)-(6,49)
(3,21)-(6,49)
(3,25)-(6,49)
(4,5)-(6,49)
(4,5)-(6,49)
(4,5)-(6,49)
(4,5)-(6,49)
(4,11)-(4,16)
(4,11)-(4,20)
(4,11)-(4,20)
(4,11)-(4,20)
(4,19)-(4,20)
(5,17)-(5,19)
(6,16)-(6,22)
(6,16)-(6,49)
(6,16)-(6,49)
(6,16)-(6,49)
(6,16)-(6,49)
(6,24)-(6,27)
(6,24)-(6,33)
(6,31)-(6,33)
(6,35)-(6,38)
(6,40)-(6,45)
(6,40)-(6,49)
(6,48)-(6,49)
(7,3)-(7,9)
(7,3)-(7,16)
(7,3)-(7,16)
(7,3)-(7,16)
(7,10)-(7,12)
(7,13)-(7,14)
(7,15)-(7,16)
(9,4)-(12,71)
(9,17)-(12,67)
(9,20)-(12,67)
(10,3)-(12,67)
(10,3)-(12,67)
(10,18)-(10,29)
(10,18)-(10,32)
(10,18)-(10,32)
(10,18)-(10,51)
(10,30)-(10,32)
(10,37)-(10,48)
(10,37)-(10,51)
(10,37)-(10,51)
(10,49)-(10,51)
(11,3)-(12,67)
(11,3)-(12,67)
(11,17)-(11,22)
(11,17)-(11,37)
(11,17)-(11,37)
(11,17)-(11,37)
(11,23)-(11,24)
(11,26)-(11,29)
(11,26)-(11,37)
(11,30)-(11,37)
(12,3)-(12,67)
(12,3)-(12,67)
(12,6)-(12,13)
(12,6)-(12,17)
(12,6)-(12,17)
(12,16)-(12,17)
(12,25)-(12,32)
(12,25)-(12,37)
(12,25)-(12,37)
(12,25)-(12,37)
(12,25)-(12,42)
(12,33)-(12,34)
(12,35)-(12,37)
(12,40)-(12,42)
(12,50)-(12,52)
(12,50)-(12,67)
(12,55)-(12,62)
(12,55)-(12,67)
(12,55)-(12,67)
(12,55)-(12,67)
(12,63)-(12,64)
(12,65)-(12,67)
(14,20)-(15,70)
(15,3)-(15,70)
(15,3)-(15,70)
(15,3)-(15,70)
(15,3)-(15,70)
(15,3)-(15,70)
(15,9)-(15,10)
(15,24)-(15,26)
(15,37)-(15,70)
(15,37)-(15,70)
(15,40)-(15,41)
(15,40)-(15,45)
(15,51)-(15,61)
(15,51)-(15,63)
(15,69)-(15,70)
(17,4)-(31,37)
(17,12)-(31,33)
(17,15)-(31,33)
(18,3)-(31,33)
(18,12)-(30,52)
(19,5)-(30,52)
(19,11)-(27,74)
(19,13)-(27,74)
(20,13)-(20,14)
(22,21)-(22,24)
(22,27)-(22,30)
(23,11)-(27,74)
(23,25)-(23,26)
(24,12)-(27,74)
(24,12)-(27,74)
(24,12)-(27,74)
(24,12)-(27,74)
(24,18)-(24,20)
(27,25)-(27,26)
(28,5)-(30,52)
(28,17)-(28,19)
(28,17)-(28,23)
(28,21)-(28,23)
(29,5)-(30,52)
(29,16)-(29,28)
(29,16)-(29,55)
(29,16)-(29,55)
(29,16)-(29,55)
(29,30)-(29,38)
(29,30)-(29,41)
(29,30)-(29,41)
(29,39)-(29,41)
(29,44)-(29,52)
(29,44)-(29,55)
(29,44)-(29,55)
(29,53)-(29,55)
(30,5)-(30,52)
(30,19)-(30,33)
(30,19)-(30,45)
(30,19)-(30,45)
(30,19)-(30,45)
(30,19)-(30,45)
(30,34)-(30,35)
(30,36)-(30,40)
(30,41)-(30,45)
(31,15)-(31,18)
(31,15)-(31,33)
(31,15)-(31,33)
(31,20)-(31,27)
(31,20)-(31,33)
(31,20)-(31,33)
(31,20)-(31,33)
(31,28)-(31,30)
(31,31)-(31,33)
*)
