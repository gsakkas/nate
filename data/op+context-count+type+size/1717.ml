
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = (x ^ sep) ^ a in
      let base = "" in let l = h ^ t in List.fold_left f base l;;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = (x ^ sep) ^ a in
      let base = "" in let l = t in List.fold_left f base l;;

*)

(* changed spans
(7,32)-(7,33)
(7,32)-(7,37)
(7,34)-(7,35)
*)

(* type error slice
(2,4)-(7,66)
(2,19)-(7,64)
(2,23)-(7,64)
(3,3)-(7,64)
(3,3)-(7,64)
(3,3)-(7,64)
(3,3)-(7,64)
(3,9)-(3,11)
(6,7)-(7,64)
(6,13)-(6,32)
(6,15)-(6,32)
(6,20)-(6,21)
(6,20)-(6,27)
(6,20)-(6,27)
(6,20)-(6,27)
(6,20)-(6,32)
(6,20)-(6,32)
(6,22)-(6,23)
(6,24)-(6,27)
(6,29)-(6,30)
(6,31)-(6,32)
(7,7)-(7,64)
(7,18)-(7,20)
(7,24)-(7,64)
(7,32)-(7,33)
(7,32)-(7,37)
(7,32)-(7,37)
(7,32)-(7,37)
(7,34)-(7,35)
(7,36)-(7,37)
(7,41)-(7,55)
(7,41)-(7,64)
(7,41)-(7,64)
(7,41)-(7,64)
(7,56)-(7,57)
(7,58)-(7,62)
(7,63)-(7,64)
*)
