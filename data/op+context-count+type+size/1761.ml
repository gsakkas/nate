
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Half of expr
  | ThreeAve of expr* expr* expr;;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match rand with
  | (a,b) ->
      let rdm = rand (a, b) in
      (match rdm with
       | 0 -> buildY ()
       | 1 -> buildX ()
       | 2 -> Cosine (build (rand, (depth - 1)))
       | 3 -> Sine (build (rand, (depth - 1)))
       | 4 ->
           Average ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 5 ->
           Times ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 6 ->
           Thresh
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
               (build (rand, (depth - 1))), (build (rand, (depth - 1)))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Half of expr
  | ThreeAve of expr* expr* expr;;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  let rdm = rand (0, 7) in
  match rdm with
  | 0 -> buildY ()
  | 1 -> buildX ()
  | 2 -> Cosine (build (rand, (depth - 1)))
  | 3 -> Sine (build (rand, (depth - 1)))
  | 4 -> Average ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 5 -> Times ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 6 ->
      Thresh
        ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
          (build (rand, (depth - 1))), (build (rand, (depth - 1))));;

*)

(* changed spans
(18,3)-(33,69)
(18,9)-(18,13)
(20,23)-(20,24)
(20,26)-(20,27)
(21,8)-(33,69)
(27,22)-(27,45)
(27,51)-(27,74)
(29,20)-(29,43)
(29,49)-(29,72)
*)

(* type error slice
(13,4)-(13,23)
(13,12)-(13,21)
(13,12)-(13,21)
(13,17)-(13,21)
(15,4)-(15,23)
(15,12)-(15,21)
(15,12)-(15,21)
(15,17)-(15,21)
(17,4)-(33,76)
(17,16)-(33,69)
(18,3)-(33,69)
(18,3)-(33,69)
(18,9)-(18,13)
(20,7)-(33,69)
(20,7)-(33,69)
(20,17)-(20,21)
(20,17)-(20,27)
(20,17)-(20,27)
(20,23)-(20,24)
(20,23)-(20,27)
(20,26)-(20,27)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,8)-(33,69)
(21,14)-(21,17)
(22,15)-(22,21)
(22,15)-(22,24)
(22,22)-(22,24)
(23,15)-(23,21)
(23,15)-(23,24)
(23,22)-(23,24)
(24,15)-(24,46)
(24,23)-(24,28)
(24,23)-(24,46)
(24,23)-(24,46)
(24,30)-(24,34)
(24,30)-(24,46)
(24,37)-(24,42)
(24,37)-(24,46)
(24,37)-(24,46)
(24,45)-(24,46)
(25,15)-(25,44)
(25,21)-(25,26)
(25,21)-(25,44)
(25,21)-(25,44)
(25,28)-(25,32)
(25,28)-(25,44)
(25,35)-(25,40)
(25,35)-(25,44)
(25,43)-(25,44)
(27,12)-(27,74)
(27,22)-(27,27)
(27,22)-(27,45)
(27,22)-(27,45)
(27,29)-(27,33)
(27,29)-(27,45)
(27,36)-(27,41)
(27,36)-(27,45)
(27,44)-(27,45)
(27,51)-(27,56)
(27,51)-(27,74)
(27,51)-(27,74)
(27,58)-(27,62)
(27,58)-(27,74)
(27,65)-(27,70)
(27,65)-(27,74)
(27,73)-(27,74)
(29,12)-(29,72)
(29,20)-(29,25)
(29,20)-(29,43)
(29,20)-(29,43)
(29,27)-(29,31)
(29,27)-(29,43)
(29,34)-(29,39)
(29,34)-(29,43)
(29,42)-(29,43)
(29,49)-(29,54)
(29,49)-(29,72)
(29,49)-(29,72)
(29,56)-(29,60)
(29,56)-(29,72)
(29,63)-(29,68)
(29,63)-(29,72)
(29,71)-(29,72)
(31,12)-(33,69)
(32,16)-(32,21)
(32,16)-(32,39)
(32,16)-(32,39)
(32,23)-(32,27)
(32,23)-(32,39)
(32,30)-(32,35)
(32,30)-(32,39)
(32,38)-(32,39)
(32,45)-(32,50)
(32,45)-(32,68)
(32,45)-(32,68)
(32,52)-(32,56)
(32,52)-(32,68)
(32,59)-(32,64)
(32,59)-(32,68)
(32,67)-(32,68)
(33,17)-(33,22)
(33,17)-(33,40)
(33,17)-(33,40)
(33,24)-(33,28)
(33,24)-(33,40)
(33,31)-(33,36)
(33,31)-(33,40)
(33,39)-(33,40)
(33,46)-(33,51)
(33,46)-(33,69)
(33,46)-(33,69)
(33,53)-(33,57)
(33,53)-(33,69)
(33,60)-(33,65)
(33,60)-(33,69)
(33,68)-(33,69)
*)
