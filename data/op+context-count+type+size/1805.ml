
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | DivAdd of expr* expr* expr* expr
  | TriMult of expr* expr* expr;;

let rec exprToString e =
  match e with
  | VarX  -> "x"
  | VarY  -> "y"
  | Sine sin -> "sin(pi*" ^ ((exprToString sin) ^ ")")
  | Cosine cos -> "cos(pi*" ^ ((exprToString cos) ^ ")")
  | Average (n1,n2) ->
      "((" ^ ((exprToString n1) ^ ("+" ^ ((exprToString n2) ^ ")/2)")))
  | Times (t1,t2) -> (exprToString t1) ^ ("*" ^ (exprToString t2))
  | Thresh (th1,th2,th3,th4) ->
      "(" ^
        ((exprToString th1) ^
           ("<" ^
              ((exprToString th2) ^
                 ("?" ^
                    ((exprToString th3) ^ (":" ^ ((exprToString th4) ^ ")")))))))
  | DivAdd (ds1,ds2,ds3,ds4) ->
      "((" ^
        ((exprToString ds1) ^
           ("+" ^
              ((exprToString ds2) ^
                 (") / (" ^
                    ((exprToString ds3) ^ ("+" ^ ((exprToString ds4) "))")))))))
  | TriMult (tm1,tm2,tm3) ->
      "(" ^
        ((exprToString tm1) ^
           ("*" ^ ((exprToString tm2) ^ (("*" (exprToString tm3)) ^ ")"))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | DivAdd of expr* expr* expr* expr
  | TriMult of expr* expr* expr;;

let rec exprToString e =
  match e with
  | VarX  -> "x"
  | VarY  -> "y"
  | Sine sin -> "sin(pi*" ^ ((exprToString sin) ^ ")")
  | Cosine cos -> "cos(pi*" ^ ((exprToString cos) ^ ")")
  | Average (n1,n2) ->
      "((" ^ ((exprToString n1) ^ ("+" ^ ((exprToString n2) ^ ")/2)")))
  | Times (t1,t2) -> (exprToString t1) ^ ("*" ^ (exprToString t2))
  | Thresh (th1,th2,th3,th4) ->
      "(" ^
        ((exprToString th1) ^
           ("<" ^
              ((exprToString th2) ^
                 ("?" ^
                    ((exprToString th3) ^ (":" ^ ((exprToString th4) ^ ")")))))))
  | DivAdd (ds1,ds2,ds3,ds4) ->
      "((" ^
        ((exprToString ds1) ^
           ("+" ^
              ((exprToString ds2) ^
                 (") / (" ^
                    ((exprToString ds3) ^ ("+" ^ ((exprToString ds4) ^ "))")))))))
  | TriMult (tm1,tm2,tm3) ->
      "(" ^
        ((exprToString tm1) ^
           ("*" ^ ((exprToString tm2) ^ ("*" ^ ((exprToString tm3) ^ ")")))));;

*)

(* changed spans
(35,52)-(35,68)
(35,52)-(35,74)
(39,43)-(39,64)
(39,48)-(39,64)
*)

(* type error slice
(13,22)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,3)-(39,72)
(14,9)-(14,10)
(17,17)-(17,26)
(17,17)-(17,54)
(17,27)-(17,28)
(17,31)-(17,43)
(17,31)-(17,47)
(17,31)-(17,47)
(17,31)-(17,54)
(17,31)-(17,54)
(17,44)-(17,47)
(17,49)-(17,50)
(17,51)-(17,54)
(18,19)-(18,28)
(18,19)-(18,56)
(18,29)-(18,30)
(18,33)-(18,45)
(18,33)-(18,49)
(18,33)-(18,56)
(18,46)-(18,49)
(18,51)-(18,52)
(18,53)-(18,56)
(20,7)-(20,11)
(20,7)-(20,69)
(20,12)-(20,13)
(20,16)-(20,28)
(20,16)-(20,31)
(20,16)-(20,69)
(20,29)-(20,31)
(20,33)-(20,34)
(20,36)-(20,39)
(20,36)-(20,69)
(20,40)-(20,41)
(20,44)-(20,56)
(20,44)-(20,59)
(20,44)-(20,69)
(20,57)-(20,59)
(20,61)-(20,62)
(20,63)-(20,69)
(21,23)-(21,35)
(21,23)-(21,38)
(21,23)-(21,65)
(21,36)-(21,38)
(21,40)-(21,41)
(21,43)-(21,46)
(21,43)-(21,65)
(21,47)-(21,48)
(21,50)-(21,62)
(21,50)-(21,65)
(21,63)-(21,65)
(23,7)-(23,10)
(23,7)-(28,75)
(23,11)-(23,12)
(24,11)-(24,23)
(24,11)-(24,27)
(24,11)-(28,75)
(24,24)-(24,27)
(24,29)-(24,30)
(25,13)-(25,16)
(25,13)-(28,75)
(25,17)-(25,18)
(26,17)-(26,29)
(26,17)-(26,33)
(26,17)-(28,75)
(26,30)-(26,33)
(26,35)-(26,36)
(27,19)-(27,22)
(27,19)-(28,75)
(27,23)-(27,24)
(28,23)-(28,35)
(28,23)-(28,39)
(28,23)-(28,75)
(28,36)-(28,39)
(28,41)-(28,42)
(28,44)-(28,47)
(28,44)-(28,75)
(28,48)-(28,49)
(28,52)-(28,64)
(28,52)-(28,68)
(28,52)-(28,75)
(28,65)-(28,68)
(28,70)-(28,71)
(28,72)-(28,75)
(30,7)-(30,11)
(30,7)-(35,74)
(30,12)-(30,13)
(31,11)-(31,23)
(31,11)-(31,27)
(31,11)-(35,74)
(31,24)-(31,27)
(31,29)-(31,30)
(32,13)-(32,16)
(32,13)-(35,74)
(32,17)-(32,18)
(33,17)-(33,29)
(33,17)-(33,33)
(33,17)-(35,74)
(33,30)-(33,33)
(33,35)-(33,36)
(34,19)-(34,26)
(34,19)-(35,74)
(34,27)-(34,28)
(35,23)-(35,35)
(35,23)-(35,39)
(35,23)-(35,74)
(35,36)-(35,39)
(35,41)-(35,42)
(35,44)-(35,47)
(35,44)-(35,74)
(35,44)-(35,74)
(35,48)-(35,49)
(35,52)-(35,64)
(35,52)-(35,68)
(35,52)-(35,74)
(35,52)-(35,74)
(35,65)-(35,68)
(35,70)-(35,74)
(37,7)-(37,10)
(37,11)-(37,12)
(38,11)-(38,23)
(38,11)-(38,27)
(38,24)-(38,27)
(38,29)-(38,30)
(39,13)-(39,16)
(39,17)-(39,18)
(39,21)-(39,33)
(39,21)-(39,37)
(39,34)-(39,37)
(39,39)-(39,40)
(39,43)-(39,46)
(39,43)-(39,64)
(39,48)-(39,60)
(39,48)-(39,64)
(39,61)-(39,64)
(39,67)-(39,68)
*)
