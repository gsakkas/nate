
let rec helperAppend l n =
  match l with | [] -> n | h::t -> h :: (helperAppend t n);;

let rec digitsOfInt n =
  if n <= 0 then [] else helperAppend (digitsOfInt (n / 10)) [n mod 10];;

let rec sumList xs = match xs with | [] -> 0 | h::t -> h + (sumList t);;

let rec additivePersistence n =
  if n <= 0 then [] else sumList (digitsOfInt n);;


(* fix

let rec helperAppend l n =
  match l with | [] -> n | h::t -> h :: (helperAppend t n);;

let rec digitsOfInt n =
  if n <= 0 then [] else helperAppend (digitsOfInt (n / 10)) [n mod 10];;

let rec sumList xs = match xs with | [] -> 0 | h::t -> h + (sumList t);;

let rec additivePersistence n = if n < 10 then 0 else sumList (digitsOfInt n);;

*)

(* changed spans
(11,6)-(11,12)
(11,11)-(11,12)
(11,18)-(11,20)
*)

(* type error slice
(2,4)-(3,61)
(2,22)-(3,58)
(2,24)-(3,58)
(3,3)-(3,58)
(3,3)-(3,58)
(3,3)-(3,58)
(3,3)-(3,58)
(3,3)-(3,58)
(3,3)-(3,58)
(3,3)-(3,58)
(3,9)-(3,10)
(3,24)-(3,25)
(3,36)-(3,37)
(3,36)-(3,58)
(3,42)-(3,54)
(3,42)-(3,58)
(3,42)-(3,58)
(3,42)-(3,58)
(3,55)-(3,56)
(3,57)-(3,58)
(5,4)-(6,74)
(5,21)-(6,72)
(6,3)-(6,72)
(6,3)-(6,72)
(6,6)-(6,7)
(6,6)-(6,12)
(6,6)-(6,12)
(6,6)-(6,12)
(6,11)-(6,12)
(6,18)-(6,20)
(6,26)-(6,38)
(6,26)-(6,72)
(6,26)-(6,72)
(6,26)-(6,72)
(6,40)-(6,51)
(6,40)-(6,59)
(6,40)-(6,59)
(6,53)-(6,54)
(6,53)-(6,59)
(6,57)-(6,59)
(6,62)-(6,72)
(6,62)-(6,72)
(6,63)-(6,64)
(6,63)-(6,71)
(6,69)-(6,71)
(8,4)-(8,73)
(8,17)-(8,70)
(8,22)-(8,70)
(8,22)-(8,70)
(8,22)-(8,70)
(8,22)-(8,70)
(8,22)-(8,70)
(8,22)-(8,70)
(8,28)-(8,30)
(8,44)-(8,45)
(8,56)-(8,57)
(8,56)-(8,70)
(8,56)-(8,70)
(8,56)-(8,70)
(8,61)-(8,68)
(8,61)-(8,70)
(8,61)-(8,70)
(8,69)-(8,70)
(10,4)-(11,51)
(10,29)-(11,48)
(11,3)-(11,48)
(11,3)-(11,48)
(11,6)-(11,7)
(11,6)-(11,12)
(11,6)-(11,12)
(11,6)-(11,12)
(11,11)-(11,12)
(11,18)-(11,20)
(11,26)-(11,33)
(11,26)-(11,48)
(11,35)-(11,46)
(11,35)-(11,48)
(11,47)-(11,48)
*)
