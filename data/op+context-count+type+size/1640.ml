
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let diff = (List.length l1) - (List.length l2) in
  if diff >= 0
  then (l1, ((clone 0 diff) @ l2))
  else ((((clone 0) - diff) @ l1), l2);;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let diff = (List.length l1) - (List.length l2) in
  if diff >= 0
  then (l1, ((clone 0 diff) @ l2))
  else (((clone 0 (abs diff)) @ l1), l2);;

*)

(* changed spans
(8,12)-(8,19)
(8,12)-(8,27)
(8,23)-(8,27)
*)

(* type error slice
(2,4)-(2,68)
(2,15)-(2,64)
(2,17)-(2,64)
(2,21)-(2,64)
(2,21)-(2,64)
(2,24)-(2,25)
(2,24)-(2,30)
(2,24)-(2,30)
(2,24)-(2,30)
(2,29)-(2,30)
(2,36)-(2,38)
(2,44)-(2,45)
(2,44)-(2,64)
(2,50)-(2,55)
(2,50)-(2,64)
(2,50)-(2,64)
(2,50)-(2,64)
(2,56)-(2,57)
(2,59)-(2,60)
(2,59)-(2,64)
(2,63)-(2,64)
(4,4)-(8,41)
(4,13)-(8,38)
(4,16)-(8,38)
(5,3)-(8,38)
(5,3)-(8,38)
(5,15)-(5,26)
(5,15)-(5,29)
(5,15)-(5,29)
(5,15)-(5,48)
(5,27)-(5,29)
(5,34)-(5,45)
(5,34)-(5,48)
(5,34)-(5,48)
(5,46)-(5,48)
(6,3)-(8,38)
(6,3)-(8,38)
(6,6)-(6,10)
(6,6)-(6,15)
(6,6)-(6,15)
(6,14)-(6,15)
(7,9)-(7,11)
(7,9)-(7,33)
(7,15)-(7,20)
(7,15)-(7,27)
(7,15)-(7,27)
(7,15)-(7,33)
(7,15)-(7,33)
(7,15)-(7,33)
(7,21)-(7,22)
(7,23)-(7,27)
(7,29)-(7,30)
(7,31)-(7,33)
(8,12)-(8,17)
(8,12)-(8,19)
(8,12)-(8,27)
(8,12)-(8,27)
(8,12)-(8,33)
(8,12)-(8,33)
(8,12)-(8,33)
(8,12)-(8,38)
(8,18)-(8,19)
(8,23)-(8,27)
(8,29)-(8,30)
(8,31)-(8,33)
(8,36)-(8,38)
*)
