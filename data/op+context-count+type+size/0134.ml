
let rec clone x n = if n > 0 then x :: (clone x (n - 1)) else [];;

let padZero l1 l2 =
  if (List.length l1) < (List.length l2)
  then ((List.append (clone 0 ((List.length l2) - (List.length l1))) l1), l2)
  else (l1, (List.append (clone 0 ((List.length l1) - (List.length l2))) l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      match a with
      | (lh1::lt1,lh2::lt2) ->
          (match x with
           | (h1,h2) ->
               (((((h1 + h2) + lh1) / 10) :: lt1),
                 ((((h1 + h2) + lh1) mod 10) :: lt2))
           | ([],[]) ->
               (match x with
                | (h1,h2) -> ([(h1 + h2) / 10], [(h1 + h2) mod 10]))) in
    let base = ([], []) in
    let args = List.combine l1 l2 in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;


(* fix

let rec clone x n = if n > 0 then x :: (clone x (n - 1)) else [];;

let padZero l1 l2 =
  if (List.length l1) < (List.length l2)
  then ((List.append (clone 0 ((List.length l2) - (List.length l1))) l1), l2)
  else (l1, (List.append (clone 0 ((List.length l1) - (List.length l2))) l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x = match x with | (v1,v2) -> ([v1], [v2]) in
    let base = ([], []) in
    let args = List.combine l1 l2 in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

*)

(* changed spans
(15,7)-(23,67)
(15,13)-(15,14)
(17,12)-(23,67)
(17,18)-(17,19)
(19,21)-(19,23)
(19,21)-(19,28)
(19,21)-(19,35)
(19,21)-(19,41)
(19,21)-(19,49)
(19,21)-(20,52)
(19,26)-(19,28)
(19,32)-(19,35)
(19,39)-(19,41)
(19,46)-(19,49)
(20,22)-(20,24)
(20,22)-(20,29)
(20,22)-(20,36)
(20,22)-(20,44)
(20,22)-(20,52)
(20,27)-(20,29)
(20,33)-(20,36)
(20,42)-(20,44)
(20,49)-(20,52)
(22,17)-(23,67)
(23,33)-(23,35)
(23,33)-(23,40)
(23,33)-(23,46)
(23,38)-(23,40)
(23,44)-(23,46)
(24,5)-(26,52)
(27,3)-(27,33)
*)

(* type error slice
(2,4)-(2,67)
(2,15)-(2,65)
(2,17)-(2,65)
(2,21)-(2,65)
(2,21)-(2,65)
(2,24)-(2,25)
(2,24)-(2,29)
(2,24)-(2,29)
(2,24)-(2,29)
(2,28)-(2,29)
(2,35)-(2,36)
(2,35)-(2,55)
(2,41)-(2,46)
(2,41)-(2,55)
(2,41)-(2,55)
(2,41)-(2,55)
(2,47)-(2,48)
(2,50)-(2,51)
(2,50)-(2,55)
(2,54)-(2,55)
(2,63)-(2,65)
(4,4)-(7,80)
(4,13)-(7,76)
(4,16)-(7,76)
(5,7)-(5,18)
(5,7)-(5,21)
(5,7)-(5,21)
(5,19)-(5,21)
(5,26)-(5,37)
(5,26)-(5,40)
(5,26)-(5,40)
(5,38)-(5,40)
(6,10)-(6,21)
(6,10)-(6,72)
(6,10)-(6,77)
(6,23)-(6,28)
(6,23)-(6,66)
(6,33)-(6,44)
(6,33)-(6,47)
(6,33)-(6,47)
(6,45)-(6,47)
(6,52)-(6,63)
(6,52)-(6,66)
(6,52)-(6,66)
(6,64)-(6,66)
(6,70)-(6,72)
(6,75)-(6,77)
(7,14)-(7,25)
(7,14)-(7,76)
(7,37)-(7,48)
(7,37)-(7,51)
(7,56)-(7,67)
(7,56)-(7,70)
(7,56)-(7,70)
(7,68)-(7,70)
(7,74)-(7,76)
(9,20)-(10,70)
(10,3)-(10,70)
(10,3)-(10,70)
(10,3)-(10,70)
(10,3)-(10,70)
(10,3)-(10,70)
(10,9)-(10,10)
(10,24)-(10,26)
(10,37)-(10,70)
(10,37)-(10,70)
(10,40)-(10,41)
(10,40)-(10,45)
(10,51)-(10,61)
(10,51)-(10,63)
(10,69)-(10,70)
(12,4)-(27,37)
(12,12)-(27,33)
(12,15)-(27,33)
(13,3)-(27,33)
(13,12)-(26,52)
(14,5)-(26,52)
(14,11)-(23,67)
(14,13)-(23,67)
(15,7)-(23,67)
(15,7)-(23,67)
(15,7)-(23,67)
(15,7)-(23,67)
(15,13)-(15,14)
(17,12)-(23,67)
(17,12)-(23,67)
(17,12)-(23,67)
(17,12)-(23,67)
(17,18)-(17,19)
(19,21)-(19,23)
(19,21)-(19,28)
(19,21)-(19,28)
(19,21)-(19,28)
(19,21)-(19,35)
(19,21)-(19,35)
(19,21)-(19,41)
(19,21)-(19,49)
(19,21)-(20,52)
(19,26)-(19,28)
(19,32)-(19,35)
(19,39)-(19,41)
(19,46)-(19,49)
(20,22)-(20,24)
(20,22)-(20,29)
(20,22)-(20,36)
(20,22)-(20,44)
(20,22)-(20,52)
(20,27)-(20,29)
(20,33)-(20,36)
(20,42)-(20,44)
(20,49)-(20,52)
(22,17)-(23,67)
(22,17)-(23,67)
(22,23)-(22,24)
(23,31)-(23,47)
(23,31)-(23,47)
(23,31)-(23,67)
(23,33)-(23,35)
(23,33)-(23,40)
(23,33)-(23,40)
(23,33)-(23,40)
(23,33)-(23,46)
(23,38)-(23,40)
(23,44)-(23,46)
(23,49)-(23,67)
(23,49)-(23,67)
(23,51)-(23,53)
(23,51)-(23,58)
(23,51)-(23,66)
(23,56)-(23,58)
(23,64)-(23,66)
(24,5)-(26,52)
(24,17)-(24,19)
(24,17)-(24,23)
(24,21)-(24,23)
(25,5)-(26,52)
(25,16)-(25,28)
(25,16)-(25,34)
(25,16)-(25,34)
(25,16)-(25,34)
(25,29)-(25,31)
(25,32)-(25,34)
(26,19)-(26,33)
(26,19)-(26,45)
(26,19)-(26,45)
(26,19)-(26,45)
(26,34)-(26,35)
(26,36)-(26,40)
(26,41)-(26,45)
(27,15)-(27,18)
(27,15)-(27,33)
(27,15)-(27,33)
(27,20)-(27,27)
(27,20)-(27,33)
(27,20)-(27,33)
(27,28)-(27,30)
(27,31)-(27,33)
*)
