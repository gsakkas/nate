
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | ECosSin of expr* expr
  | SinLog of expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildECosSin (a,b) = ECosSin (a, b);;

let buildSinLog (a,b,c) = SinLog (a, b, c);;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let rec build (rand,depth) =
  let r = rand (if depth = 0 then (8, 10) else (1, 8)) in
  match r with
  | 1 -> buildSine (build (rand, (depth - 1)))
  | 2 -> buildCosine (build (rand, (depth - 1)))
  | 3 ->
      buildAverage ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 4 ->
      buildTimes ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 5 ->
      buildThresh
        ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
          (build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 6 ->
      buildECosSin ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 7 ->
      buildSinLog ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 8 -> VarX
  | 9 -> VarY;;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | ECosSin of expr* expr
  | SinLog of expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildECosSin (a,b) = ECosSin (a, b);;

let buildSinLog (a,b,c) = SinLog (a, b, c);;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let rec build (rand,depth) =
  let r = rand (if depth = 0 then (8, 10) else (1, 8)) in
  match r with
  | 1 -> buildSine (build (rand, (depth - 1)))
  | 2 -> buildCosine (build (rand, (depth - 1)))
  | 3 ->
      buildAverage ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 4 ->
      buildTimes ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 5 ->
      buildThresh
        ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
          (build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 6 ->
      buildECosSin ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 7 ->
      buildSinLog
        ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
          (build (rand, (depth - 1))))
  | 8 -> VarX
  | 9 -> VarY;;

*)

(* changed spans
(33,22)-(33,45)
(33,51)-(33,74)
(35,20)-(35,43)
(35,49)-(35,72)
(41,22)-(41,45)
(41,51)-(41,74)
(43,21)-(43,73)
(44,10)-(44,14)
*)

(* type error slice
(13,4)-(13,46)
(13,19)-(13,43)
(13,28)-(13,43)
(13,37)-(13,39)
(13,41)-(13,43)
(15,4)-(15,31)
(15,17)-(15,29)
(15,21)-(15,29)
(15,28)-(15,29)
(17,4)-(17,42)
(17,19)-(17,39)
(17,26)-(17,39)
(17,35)-(17,36)
(17,38)-(17,39)
(19,4)-(19,45)
(19,18)-(19,42)
(19,27)-(19,42)
(19,35)-(19,36)
(19,38)-(19,39)
(19,41)-(19,42)
(21,4)-(21,27)
(21,15)-(21,25)
(21,19)-(21,25)
(21,24)-(21,25)
(23,4)-(23,70)
(23,18)-(23,67)
(23,39)-(23,67)
(23,47)-(23,48)
(23,50)-(23,51)
(23,53)-(23,59)
(23,61)-(23,67)
(25,4)-(25,42)
(25,17)-(25,39)
(25,26)-(25,39)
(25,33)-(25,35)
(25,37)-(25,39)
(27,16)-(45,14)
(28,3)-(45,14)
(28,11)-(28,15)
(28,11)-(28,53)
(28,11)-(28,53)
(28,17)-(28,53)
(28,20)-(28,25)
(28,20)-(28,29)
(28,20)-(28,29)
(28,20)-(28,29)
(28,28)-(28,29)
(28,36)-(28,37)
(28,36)-(28,41)
(28,39)-(28,41)
(28,49)-(28,50)
(28,49)-(28,53)
(28,52)-(28,53)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,3)-(45,14)
(29,9)-(29,10)
(30,10)-(30,19)
(30,10)-(30,44)
(30,10)-(30,44)
(30,21)-(30,26)
(30,21)-(30,44)
(30,21)-(30,44)
(30,28)-(30,32)
(30,28)-(30,44)
(30,35)-(30,40)
(30,35)-(30,44)
(30,43)-(30,44)
(31,10)-(31,21)
(31,10)-(31,46)
(31,23)-(31,28)
(31,23)-(31,46)
(31,23)-(31,46)
(31,30)-(31,34)
(31,30)-(31,46)
(31,37)-(31,42)
(31,37)-(31,46)
(31,45)-(31,46)
(33,7)-(33,19)
(33,7)-(33,74)
(33,22)-(33,27)
(33,22)-(33,45)
(33,22)-(33,45)
(33,22)-(33,74)
(33,29)-(33,33)
(33,29)-(33,45)
(33,36)-(33,41)
(33,36)-(33,45)
(33,44)-(33,45)
(33,51)-(33,56)
(33,51)-(33,74)
(33,51)-(33,74)
(33,58)-(33,62)
(33,58)-(33,74)
(33,65)-(33,70)
(33,65)-(33,74)
(33,73)-(33,74)
(35,7)-(35,17)
(35,7)-(35,72)
(35,20)-(35,25)
(35,20)-(35,43)
(35,20)-(35,43)
(35,20)-(35,72)
(35,27)-(35,31)
(35,27)-(35,43)
(35,34)-(35,39)
(35,34)-(35,43)
(35,42)-(35,43)
(35,49)-(35,54)
(35,49)-(35,72)
(35,49)-(35,72)
(35,56)-(35,60)
(35,56)-(35,72)
(35,63)-(35,68)
(35,63)-(35,72)
(35,71)-(35,72)
(37,7)-(37,18)
(37,7)-(39,64)
(38,11)-(38,16)
(38,11)-(38,34)
(38,11)-(38,34)
(38,11)-(39,64)
(38,18)-(38,22)
(38,18)-(38,34)
(38,25)-(38,30)
(38,25)-(38,34)
(38,33)-(38,34)
(38,40)-(38,45)
(38,40)-(38,63)
(38,40)-(38,63)
(38,47)-(38,51)
(38,47)-(38,63)
(38,54)-(38,59)
(38,54)-(38,63)
(38,62)-(38,63)
(39,12)-(39,17)
(39,12)-(39,35)
(39,12)-(39,35)
(39,19)-(39,23)
(39,19)-(39,35)
(39,26)-(39,31)
(39,26)-(39,35)
(39,34)-(39,35)
(39,41)-(39,46)
(39,41)-(39,64)
(39,41)-(39,64)
(39,48)-(39,52)
(39,48)-(39,64)
(39,55)-(39,60)
(39,55)-(39,64)
(39,63)-(39,64)
(41,7)-(41,19)
(41,7)-(41,74)
(41,22)-(41,27)
(41,22)-(41,45)
(41,22)-(41,45)
(41,22)-(41,74)
(41,29)-(41,33)
(41,29)-(41,45)
(41,36)-(41,41)
(41,36)-(41,45)
(41,44)-(41,45)
(41,51)-(41,56)
(41,51)-(41,74)
(41,51)-(41,74)
(41,58)-(41,62)
(41,58)-(41,74)
(41,65)-(41,70)
(41,65)-(41,74)
(41,73)-(41,74)
(43,7)-(43,18)
(43,7)-(43,73)
(43,7)-(43,73)
(43,21)-(43,26)
(43,21)-(43,44)
(43,21)-(43,44)
(43,21)-(43,73)
(43,28)-(43,32)
(43,28)-(43,44)
(43,35)-(43,40)
(43,35)-(43,44)
(43,43)-(43,44)
(43,50)-(43,55)
(43,50)-(43,73)
(43,50)-(43,73)
(43,57)-(43,61)
(43,57)-(43,73)
(43,64)-(43,69)
(43,64)-(43,73)
(43,72)-(43,73)
*)
