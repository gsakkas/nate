
let rec append xs1 xs2 =
  match xs1 with | [] -> xs2 | hd::tl -> hd :: (append tl xs2);;

let explode s =
  let rec go i =
    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in
  go 0;;

let rec listReverse l =
  match l with | [] -> [] | hd::tl -> append (listReverse tl) [hd];;

let palindrome w = failwith "TBD";;

let palindrome w =
  match explode w with
  | [] -> true
  | head::[] -> true
  | head::tail ->
      if head = (List.hd (listReverse w))
      then palindrome (List.tl (listReverse tail))
      else false;;


(* fix

let rec append xs1 xs2 =
  match xs1 with | [] -> xs2 | hd::tl -> hd :: (append tl xs2);;

let explode s =
  let rec go i =
    if i >= (String.length s) then [] else (s.[i]) :: (go (i + 1)) in
  go 0;;

let rec listReverse l =
  match l with | [] -> [] | hd::tl -> append (listReverse tl) [hd];;

let palindrome w =
  let rec palHelper xs =
    match xs with
    | [] -> true
    | hd::tl ->
        (match listReverse tl with
         | [] -> true
         | hdr::tlr -> if hdr = hd then palHelper tlr else false) in
  palHelper (explode w);;

*)

(* changed spans
(13,20)-(13,28)
(13,20)-(13,34)
(13,29)-(13,34)
(15,16)-(22,17)
(16,3)-(22,17)
(16,9)-(16,16)
(16,9)-(16,18)
(16,17)-(16,18)
(17,11)-(17,15)
(18,17)-(18,21)
(20,10)-(20,14)
(20,18)-(20,25)
(20,18)-(20,40)
(20,27)-(20,38)
(20,27)-(20,40)
(20,39)-(20,40)
(21,12)-(21,22)
(21,12)-(21,49)
(21,24)-(21,31)
(21,24)-(21,49)
(21,33)-(21,44)
(21,45)-(21,49)
(22,12)-(22,17)
*)

(* type error slice
(2,4)-(3,65)
(2,16)-(3,62)
(2,20)-(3,62)
(3,3)-(3,62)
(3,3)-(3,62)
(3,3)-(3,62)
(3,3)-(3,62)
(3,3)-(3,62)
(3,3)-(3,62)
(3,3)-(3,62)
(3,9)-(3,12)
(3,26)-(3,29)
(3,42)-(3,44)
(3,42)-(3,62)
(3,49)-(3,55)
(3,49)-(3,62)
(3,49)-(3,62)
(3,49)-(3,62)
(3,56)-(3,58)
(3,59)-(3,62)
(5,4)-(8,9)
(5,13)-(8,7)
(6,3)-(8,7)
(6,3)-(8,7)
(6,14)-(7,65)
(7,5)-(7,65)
(7,5)-(7,65)
(7,8)-(7,9)
(7,8)-(7,29)
(7,8)-(7,29)
(7,8)-(7,29)
(7,14)-(7,27)
(7,14)-(7,29)
(7,14)-(7,29)
(7,28)-(7,29)
(7,36)-(7,38)
(7,45)-(7,46)
(7,45)-(7,50)
(7,45)-(7,50)
(7,45)-(7,65)
(7,48)-(7,49)
(7,56)-(7,58)
(7,56)-(7,65)
(7,56)-(7,65)
(7,60)-(7,61)
(7,60)-(7,65)
(7,64)-(7,65)
(8,3)-(8,5)
(8,3)-(8,7)
(8,6)-(8,7)
(10,4)-(11,69)
(10,21)-(11,67)
(11,3)-(11,67)
(11,3)-(11,67)
(11,3)-(11,67)
(11,3)-(11,67)
(11,3)-(11,67)
(11,3)-(11,67)
(11,3)-(11,67)
(11,9)-(11,10)
(11,24)-(11,26)
(11,39)-(11,45)
(11,39)-(11,67)
(11,39)-(11,67)
(11,39)-(11,67)
(11,47)-(11,58)
(11,47)-(11,61)
(11,47)-(11,61)
(11,59)-(11,61)
(11,63)-(11,67)
(11,63)-(11,67)
(11,64)-(11,66)
(13,4)-(13,36)
(13,16)-(13,34)
(13,20)-(13,28)
(13,20)-(13,34)
(13,29)-(13,34)
(15,4)-(22,19)
(15,16)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,3)-(22,17)
(16,9)-(16,16)
(16,9)-(16,18)
(16,9)-(16,18)
(16,17)-(16,18)
(17,11)-(17,15)
(18,17)-(18,21)
(20,7)-(22,17)
(20,10)-(20,14)
(20,10)-(20,40)
(20,10)-(20,40)
(20,10)-(20,40)
(20,18)-(20,25)
(20,18)-(20,40)
(20,18)-(20,40)
(20,27)-(20,38)
(20,27)-(20,40)
(20,27)-(20,40)
(20,39)-(20,40)
(21,12)-(21,22)
(21,12)-(21,49)
(21,12)-(21,49)
(21,24)-(21,31)
(21,24)-(21,49)
(21,24)-(21,49)
(21,33)-(21,44)
(21,33)-(21,49)
(21,33)-(21,49)
(21,45)-(21,49)
*)
