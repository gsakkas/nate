
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  let e = build (rand, (depth - 1)) in
  if depth > 1
  then
    match rand (0 4) with
    | 0 -> buildSine e
    | 1 -> buildCosine e
    | 2 -> buildAverage (e, e)
    | 3 -> buildTimes (e, e)
    | 4 -> buildThresh (e, e, e, e)
  else (match rand (0 1) with | 0 -> buildX () | 1 -> buildY ());;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  let e = build (rand, (depth - 1)) in
  if depth > 1
  then
    match rand (0, 4) with
    | 0 -> buildSine e
    | 1 -> buildCosine e
    | 2 -> buildAverage (e, e)
    | 3 -> buildTimes (e, e)
    | 4 -> buildThresh (e, e, e, e)
  else (match rand (0, 1) with | 0 -> buildX () | 1 -> buildY ());;

*)

(* changed spans
(29,17)-(29,20)
(32,26)-(32,27)
(32,29)-(32,30)
(33,24)-(33,25)
(33,27)-(33,28)
(35,21)-(35,24)
*)

(* type error slice
(11,4)-(11,46)
(11,19)-(11,43)
(11,28)-(11,43)
(11,37)-(11,39)
(11,41)-(11,43)
(13,4)-(13,31)
(13,17)-(13,29)
(13,21)-(13,29)
(13,28)-(13,29)
(15,4)-(15,27)
(15,15)-(15,25)
(15,19)-(15,25)
(15,24)-(15,25)
(17,4)-(17,70)
(17,18)-(17,67)
(17,39)-(17,67)
(17,47)-(17,48)
(17,50)-(17,51)
(17,53)-(17,59)
(17,61)-(17,67)
(19,4)-(19,42)
(19,17)-(19,39)
(19,26)-(19,39)
(19,33)-(19,35)
(19,37)-(19,39)
(21,4)-(21,23)
(21,12)-(21,21)
(21,12)-(21,21)
(21,17)-(21,21)
(23,4)-(23,23)
(23,12)-(23,21)
(23,12)-(23,21)
(23,17)-(23,21)
(25,4)-(35,67)
(25,16)-(35,64)
(26,3)-(35,64)
(26,3)-(35,64)
(26,11)-(26,16)
(26,11)-(26,34)
(26,11)-(26,34)
(26,18)-(26,22)
(26,18)-(26,34)
(26,25)-(26,30)
(26,25)-(26,34)
(26,25)-(26,34)
(26,33)-(26,34)
(27,3)-(35,64)
(27,3)-(35,64)
(27,6)-(27,11)
(27,6)-(27,15)
(27,6)-(27,15)
(27,14)-(27,15)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,5)-(34,35)
(29,11)-(29,15)
(29,11)-(29,20)
(29,11)-(29,20)
(29,17)-(29,18)
(29,17)-(29,20)
(29,17)-(29,20)
(29,19)-(29,20)
(30,12)-(30,21)
(30,12)-(30,23)
(30,12)-(30,23)
(30,22)-(30,23)
(31,12)-(31,23)
(31,12)-(31,25)
(31,24)-(31,25)
(32,12)-(32,24)
(32,12)-(32,30)
(32,26)-(32,27)
(32,26)-(32,30)
(32,29)-(32,30)
(33,12)-(33,22)
(33,12)-(33,28)
(33,24)-(33,25)
(33,24)-(33,28)
(33,27)-(33,28)
(34,12)-(34,23)
(34,12)-(34,35)
(34,25)-(34,26)
(34,25)-(34,35)
(34,28)-(34,29)
(34,31)-(34,32)
(34,34)-(34,35)
(35,9)-(35,64)
(35,9)-(35,64)
(35,9)-(35,64)
(35,9)-(35,64)
(35,15)-(35,19)
(35,15)-(35,24)
(35,15)-(35,24)
(35,21)-(35,22)
(35,21)-(35,24)
(35,21)-(35,24)
(35,23)-(35,24)
(35,38)-(35,44)
(35,38)-(35,47)
(35,45)-(35,47)
(35,55)-(35,61)
(35,55)-(35,64)
(35,62)-(35,64)
*)
