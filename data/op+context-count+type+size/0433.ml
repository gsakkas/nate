
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let dl = (List.length l1) - (List.length l2) in
  match dl with
  | 0 -> (l1, l2)
  | _ ->
      if dl > 0
      then (l1, ((clone 0 dl) @ l2))
      else (((clone 0 (dl / (-1))) @ l1), l2);;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h == 0 then removeZero t else h :: t;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let z = (fst x) + (snd x) in
      match a with | (w,y) -> (((w + z) / 10), (((w + z) mod 10) :: y)) in
    let base = (0, []) in
    let args = (List.rev (List.combine l1 l2)) @ [(0, 0)] in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

let rec mulByDigit i l =
  let rec helper acc n lis =
    match n with | 1 -> bigAdd lis acc | _ -> helper (n - 1) (bigAdd l lis) in
  helper [0] i l;;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  let dl = (List.length l1) - (List.length l2) in
  match dl with
  | 0 -> (l1, l2)
  | _ ->
      if dl > 0
      then (l1, ((clone 0 dl) @ l2))
      else (((clone 0 (dl / (-1))) @ l1), l2);;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h == 0 then removeZero t else h :: t;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let z = (fst x) + (snd x) in
      match a with | (w,y) -> (((w + z) / 10), (((w + z) mod 10) :: y)) in
    let base = (0, []) in
    let args = (List.rev (List.combine l1 l2)) @ [(0, 0)] in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

let rec mulByDigit i l =
  let rec helper i l acc =
    match i with | 0 -> [0] | 1 -> l | _ -> helper (i - 1) l (bigAdd acc l) in
  helper i l [0];;

*)

(* changed spans
(22,52)-(22,53)
(22,55)-(22,56)
(27,18)-(28,75)
(27,22)-(28,75)
(27,24)-(28,75)
(28,5)-(28,75)
(28,11)-(28,12)
(28,25)-(28,31)
(28,25)-(28,39)
(28,32)-(28,35)
(28,36)-(28,39)
(28,47)-(28,53)
(28,47)-(28,75)
(28,55)-(28,56)
(28,63)-(28,75)
(28,70)-(28,71)
(28,72)-(28,75)
(29,10)-(29,13)
(29,11)-(29,12)
*)

(* type error slice
(2,4)-(2,68)
(2,15)-(2,64)
(2,17)-(2,64)
(2,21)-(2,64)
(2,21)-(2,64)
(2,24)-(2,25)
(2,24)-(2,30)
(2,24)-(2,30)
(2,24)-(2,30)
(2,29)-(2,30)
(2,36)-(2,38)
(2,44)-(2,45)
(2,44)-(2,64)
(2,50)-(2,55)
(2,50)-(2,64)
(2,50)-(2,64)
(2,50)-(2,64)
(2,56)-(2,57)
(2,59)-(2,60)
(2,59)-(2,64)
(2,63)-(2,64)
(4,4)-(11,48)
(4,13)-(11,45)
(4,16)-(11,45)
(5,3)-(11,45)
(5,3)-(11,45)
(5,13)-(5,24)
(5,13)-(5,27)
(5,13)-(5,27)
(5,13)-(5,46)
(5,25)-(5,27)
(5,32)-(5,43)
(5,32)-(5,46)
(5,32)-(5,46)
(5,44)-(5,46)
(6,3)-(11,45)
(6,3)-(11,45)
(6,3)-(11,45)
(6,9)-(6,11)
(7,11)-(7,13)
(7,11)-(7,17)
(7,15)-(7,17)
(9,7)-(11,45)
(9,10)-(9,12)
(9,10)-(9,16)
(9,10)-(9,16)
(9,15)-(9,16)
(10,13)-(10,15)
(10,13)-(10,35)
(10,19)-(10,24)
(10,19)-(10,29)
(10,19)-(10,29)
(10,19)-(10,35)
(10,19)-(10,35)
(10,19)-(10,35)
(10,25)-(10,26)
(10,27)-(10,29)
(10,31)-(10,32)
(10,33)-(10,35)
(11,15)-(11,20)
(11,15)-(11,32)
(11,15)-(11,40)
(11,15)-(11,40)
(11,15)-(11,40)
(11,15)-(11,45)
(11,21)-(11,22)
(11,24)-(11,26)
(11,24)-(11,32)
(11,30)-(11,32)
(11,36)-(11,37)
(11,38)-(11,40)
(11,43)-(11,45)
(13,4)-(14,78)
(13,20)-(14,76)
(14,3)-(14,76)
(14,3)-(14,76)
(14,3)-(14,76)
(14,3)-(14,76)
(14,3)-(14,76)
(14,3)-(14,76)
(14,3)-(14,76)
(14,9)-(14,10)
(14,24)-(14,26)
(14,37)-(14,76)
(14,37)-(14,76)
(14,40)-(14,41)
(14,40)-(14,46)
(14,40)-(14,46)
(14,40)-(14,46)
(14,45)-(14,46)
(14,52)-(14,62)
(14,52)-(14,64)
(14,52)-(14,64)
(14,63)-(14,64)
(14,70)-(14,71)
(14,70)-(14,76)
(14,75)-(14,76)
(16,4)-(24,37)
(16,12)-(24,33)
(16,15)-(24,33)
(17,3)-(24,33)
(17,3)-(24,33)
(17,12)-(23,52)
(18,5)-(23,52)
(18,5)-(23,52)
(18,11)-(20,70)
(18,13)-(20,70)
(19,7)-(20,70)
(19,7)-(20,70)
(19,16)-(19,19)
(19,16)-(19,21)
(19,16)-(19,21)
(19,16)-(19,31)
(19,16)-(19,31)
(19,16)-(19,31)
(19,20)-(19,21)
(19,26)-(19,29)
(19,26)-(19,31)
(19,26)-(19,31)
(19,30)-(19,31)
(20,7)-(20,70)
(20,7)-(20,70)
(20,13)-(20,14)
(20,34)-(20,35)
(20,34)-(20,39)
(20,34)-(20,39)
(20,34)-(20,45)
(20,34)-(20,70)
(20,38)-(20,39)
(20,43)-(20,45)
(20,51)-(20,52)
(20,51)-(20,56)
(20,51)-(20,64)
(20,51)-(20,70)
(20,55)-(20,56)
(20,62)-(20,64)
(20,69)-(20,70)
(21,5)-(23,52)
(21,5)-(23,52)
(21,17)-(21,18)
(21,17)-(21,22)
(21,20)-(21,22)
(22,5)-(23,52)
(22,5)-(23,52)
(22,17)-(22,25)
(22,17)-(22,45)
(22,17)-(22,45)
(22,17)-(22,58)
(22,17)-(22,58)
(22,17)-(22,58)
(22,27)-(22,39)
(22,27)-(22,45)
(22,27)-(22,45)
(22,27)-(22,45)
(22,40)-(22,42)
(22,43)-(22,45)
(22,48)-(22,49)
(22,50)-(22,58)
(22,50)-(22,58)
(22,52)-(22,53)
(22,52)-(22,56)
(22,55)-(22,56)
(23,5)-(23,52)
(23,5)-(23,52)
(23,19)-(23,33)
(23,19)-(23,45)
(23,19)-(23,45)
(23,19)-(23,45)
(23,19)-(23,45)
(23,34)-(23,35)
(23,36)-(23,40)
(23,41)-(23,45)
(23,49)-(23,52)
(24,3)-(24,13)
(24,3)-(24,33)
(24,3)-(24,33)
(24,15)-(24,18)
(24,15)-(24,33)
(24,15)-(24,33)
(24,20)-(24,27)
(24,20)-(24,33)
(24,20)-(24,33)
(24,20)-(24,33)
(24,28)-(24,30)
(24,31)-(24,33)
(26,4)-(29,19)
(26,20)-(29,17)
(26,22)-(29,17)
(27,3)-(29,17)
(27,3)-(29,17)
(27,18)-(28,75)
(27,22)-(28,75)
(27,24)-(28,75)
(28,5)-(28,75)
(28,5)-(28,75)
(28,5)-(28,75)
(28,5)-(28,75)
(28,11)-(28,12)
(28,25)-(28,31)
(28,25)-(28,39)
(28,25)-(28,39)
(28,25)-(28,39)
(28,32)-(28,35)
(28,36)-(28,39)
(28,47)-(28,53)
(28,47)-(28,75)
(28,47)-(28,75)
(28,47)-(28,75)
(28,55)-(28,56)
(28,55)-(28,60)
(28,55)-(28,60)
(28,59)-(28,60)
(28,63)-(28,69)
(28,63)-(28,75)
(28,63)-(28,75)
(28,63)-(28,75)
(28,70)-(28,71)
(28,72)-(28,75)
(29,3)-(29,9)
(29,3)-(29,17)
(29,3)-(29,17)
(29,3)-(29,17)
(29,10)-(29,13)
(29,10)-(29,13)
(29,11)-(29,12)
(29,14)-(29,15)
(29,16)-(29,17)
*)
