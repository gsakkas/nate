
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = a ^ (sep ^ x) in
      let base = if t = [] then "A" else t in
      let l = sl in List.fold_left f base l;;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = a ^ (sep ^ x) in
      let base = if t = [] then "A" else h in
      let l = sl in List.fold_left f base l;;

*)

(* changed spans
(7,42)-(7,43)
*)

(* type error slice
(2,4)-(8,46)
(2,19)-(8,44)
(2,23)-(8,44)
(3,3)-(8,44)
(3,3)-(8,44)
(3,3)-(8,44)
(3,3)-(8,44)
(3,3)-(8,44)
(3,9)-(3,11)
(6,7)-(8,44)
(6,13)-(6,31)
(6,15)-(6,31)
(6,19)-(6,20)
(6,19)-(6,31)
(6,19)-(6,31)
(6,21)-(6,22)
(6,24)-(6,27)
(6,24)-(6,31)
(6,24)-(6,31)
(6,24)-(6,31)
(6,28)-(6,29)
(6,30)-(6,31)
(7,18)-(7,43)
(7,18)-(7,43)
(7,21)-(7,22)
(7,21)-(7,27)
(7,21)-(7,27)
(7,21)-(7,27)
(7,25)-(7,27)
(7,33)-(7,36)
(7,42)-(7,43)
(8,7)-(8,44)
(8,15)-(8,17)
(8,21)-(8,35)
(8,21)-(8,44)
(8,21)-(8,44)
(8,21)-(8,44)
(8,36)-(8,37)
(8,43)-(8,44)
*)
