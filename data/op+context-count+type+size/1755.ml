
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Half of expr
  | ThreeAve of expr* expr* expr;;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  let newRand = rand (0, 4) in
  match depth with
  | 0 ->
      let halff = rand (0, 2) in if halff = 0 then buildY () else buildX ()
  | 1 ->
      let halff = rand (0, 2) in
      if halff = 0
      then Cosine (build (newRand, (depth - 1)))
      else Sine (build (newRand, (depth - 1)))
  | 2 ->
      Average
        ((build (newRand, (depth - 1))), (build (newRand, (depth - 1))))
  | 3 ->
      Times ((build (newRand, (depth - 1))), (build (newRand, (depth - 1))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Half of expr
  | ThreeAve of expr* expr* expr;;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match depth with
  | 0 ->
      let halff = rand (0, 2) in if halff = 0 then buildY () else buildX ()
  | 1 ->
      let halff = rand (0, 2) in
      if halff = 0
      then Cosine (build (rand, (depth - 1)))
      else Sine (build (rand, (depth - 1)))
  | 2 -> Average ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
  | 3 -> Times ((build (rand, (depth - 1))), (build (rand, (depth - 1))));;

*)

(* changed spans
(18,3)-(31,73)
(18,17)-(18,21)
(18,17)-(18,27)
(18,23)-(18,24)
(18,23)-(18,27)
(18,26)-(18,27)
(25,27)-(25,34)
(26,25)-(26,32)
(29,18)-(29,25)
(29,50)-(29,57)
(31,22)-(31,29)
*)

(* type error slice
(13,4)-(13,23)
(13,12)-(13,21)
(13,12)-(13,21)
(13,17)-(13,21)
(15,4)-(15,23)
(15,12)-(15,21)
(15,12)-(15,21)
(15,17)-(15,21)
(17,4)-(31,79)
(17,16)-(31,73)
(18,3)-(31,73)
(18,3)-(31,73)
(18,17)-(18,21)
(18,17)-(18,27)
(18,17)-(18,27)
(18,23)-(18,24)
(18,23)-(18,27)
(18,26)-(18,27)
(19,3)-(31,73)
(19,3)-(31,73)
(19,3)-(31,73)
(19,3)-(31,73)
(19,3)-(31,73)
(19,3)-(31,73)
(19,9)-(19,14)
(21,7)-(21,76)
(21,7)-(21,76)
(21,19)-(21,23)
(21,19)-(21,29)
(21,25)-(21,26)
(21,25)-(21,29)
(21,28)-(21,29)
(21,34)-(21,76)
(21,34)-(21,76)
(21,37)-(21,42)
(21,37)-(21,46)
(21,37)-(21,46)
(21,37)-(21,46)
(21,45)-(21,46)
(21,52)-(21,58)
(21,52)-(21,61)
(21,59)-(21,61)
(21,67)-(21,73)
(21,67)-(21,76)
(21,74)-(21,76)
(23,7)-(26,44)
(23,7)-(26,44)
(23,19)-(23,23)
(23,19)-(23,29)
(23,25)-(23,26)
(23,25)-(23,29)
(23,28)-(23,29)
(24,7)-(26,44)
(24,10)-(24,15)
(24,10)-(24,19)
(24,10)-(24,19)
(24,18)-(24,19)
(25,12)-(25,46)
(25,20)-(25,25)
(25,20)-(25,46)
(25,20)-(25,46)
(25,27)-(25,34)
(25,27)-(25,46)
(25,37)-(25,42)
(25,37)-(25,46)
(25,37)-(25,46)
(25,45)-(25,46)
(26,12)-(26,44)
(26,18)-(26,23)
(26,18)-(26,44)
(26,25)-(26,32)
(26,25)-(26,44)
(26,35)-(26,40)
(26,35)-(26,44)
(26,43)-(26,44)
(28,7)-(29,69)
(29,11)-(29,16)
(29,11)-(29,37)
(29,18)-(29,25)
(29,18)-(29,37)
(29,28)-(29,33)
(29,28)-(29,37)
(29,36)-(29,37)
(29,43)-(29,48)
(29,43)-(29,69)
(29,50)-(29,57)
(29,50)-(29,69)
(29,60)-(29,65)
(29,60)-(29,69)
(29,68)-(29,69)
(31,7)-(31,73)
(31,15)-(31,20)
(31,15)-(31,41)
(31,22)-(31,29)
(31,22)-(31,41)
(31,32)-(31,37)
(31,32)-(31,41)
(31,40)-(31,41)
(31,47)-(31,52)
(31,47)-(31,73)
(31,54)-(31,61)
(31,54)-(31,73)
(31,64)-(31,69)
(31,64)-(31,73)
(31,72)-(31,73)
*)
