
let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  if (List.length l1) = (List.length l2)
  then (l1, l2)
  else
    if (List.length l1) < (List.length l2)
    then (((clone 0 ((List.length l2) - (List.length l1))) @ l1), l2)
    else (l1, ((clone 0 ((List.length l1) - (List.length l2))) @ l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let (addC,resOfAdd) = a in
      let (i1,i2) = x in
      let result = (i1 + i2) + addC in
      let nextCarry = result / 10 in
      match resOfAdd with
      | [] -> (nextCarry, (nextCarry @ ([result mod 10] @ [])))
      | h::t -> (nextCarry, (nextCarry @ ([result mod 10] @ t))) in
    let base = (0, []) in
    let args = List.rev (List.combine l1 l2) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;


(* fix

let rec clone x n = if n <= 0 then [] else x :: (clone x (n - 1));;

let padZero l1 l2 =
  if (List.length l1) = (List.length l2)
  then (l1, l2)
  else
    if (List.length l1) < (List.length l2)
    then (((clone 0 ((List.length l2) - (List.length l1))) @ l1), l2)
    else (l1, ((clone 0 ((List.length l1) - (List.length l2))) @ l2));;

let rec removeZero l =
  match l with | [] -> [] | h::t -> if h = 0 then removeZero t else l;;

let bigAdd l1 l2 =
  let add (l1,l2) =
    let f a x =
      let (addC,resOfAdd) = a in
      let (i1,i2) = x in
      let result = (i1 + i2) + addC in
      let nextCarry = result / 10 in
      match resOfAdd with
      | [] -> (nextCarry, ([nextCarry] @ ([result mod 10] @ [])))
      | h::t -> (nextCarry, ([nextCarry] @ ([result mod 10] @ t))) in
    let base = (0, []) in
    let args = List.rev (List.combine l1 l2) in
    let (_,res) = List.fold_left f base args in res in
  removeZero (add (padZero l1 l2));;

*)

(* changed spans
(23,28)-(23,37)
(24,30)-(24,39)
*)

(* type error slice
(2,4)-(2,68)
(2,15)-(2,64)
(2,17)-(2,64)
(2,21)-(2,64)
(2,21)-(2,64)
(2,24)-(2,25)
(2,24)-(2,30)
(2,24)-(2,30)
(2,24)-(2,30)
(2,29)-(2,30)
(2,36)-(2,38)
(2,44)-(2,45)
(2,44)-(2,64)
(2,50)-(2,55)
(2,50)-(2,64)
(2,50)-(2,64)
(2,50)-(2,64)
(2,56)-(2,57)
(2,59)-(2,60)
(2,59)-(2,64)
(2,63)-(2,64)
(4,4)-(10,72)
(4,13)-(10,68)
(4,16)-(10,68)
(5,7)-(5,18)
(5,7)-(5,21)
(5,7)-(5,21)
(5,19)-(5,21)
(5,26)-(5,37)
(5,26)-(5,40)
(5,26)-(5,40)
(5,38)-(5,40)
(6,9)-(6,11)
(6,9)-(6,15)
(6,13)-(6,15)
(8,9)-(8,20)
(8,9)-(8,23)
(8,9)-(8,23)
(8,21)-(8,23)
(8,28)-(8,39)
(8,28)-(8,42)
(8,28)-(8,42)
(8,40)-(8,42)
(9,13)-(9,18)
(9,13)-(9,56)
(9,13)-(9,64)
(9,13)-(9,69)
(9,23)-(9,34)
(9,23)-(9,37)
(9,23)-(9,37)
(9,35)-(9,37)
(9,42)-(9,53)
(9,42)-(9,56)
(9,42)-(9,56)
(9,54)-(9,56)
(9,60)-(9,61)
(9,62)-(9,64)
(9,67)-(9,69)
(10,17)-(10,68)
(10,27)-(10,38)
(10,27)-(10,41)
(10,46)-(10,57)
(10,46)-(10,60)
(10,46)-(10,60)
(10,58)-(10,60)
(10,64)-(10,65)
(10,66)-(10,68)
(12,20)-(13,70)
(13,3)-(13,70)
(13,3)-(13,70)
(13,3)-(13,70)
(13,3)-(13,70)
(13,3)-(13,70)
(13,9)-(13,10)
(13,24)-(13,26)
(13,37)-(13,70)
(13,37)-(13,70)
(13,40)-(13,41)
(13,40)-(13,45)
(13,51)-(13,61)
(13,51)-(13,63)
(13,69)-(13,70)
(15,4)-(28,37)
(15,12)-(28,33)
(15,15)-(28,33)
(16,3)-(28,33)
(16,12)-(27,52)
(17,5)-(27,52)
(17,11)-(24,62)
(17,13)-(24,62)
(18,7)-(24,62)
(18,29)-(18,30)
(19,7)-(24,62)
(19,21)-(19,22)
(20,7)-(24,62)
(20,21)-(20,23)
(20,21)-(20,36)
(20,26)-(20,28)
(20,32)-(20,36)
(21,7)-(24,62)
(21,23)-(21,29)
(21,23)-(21,34)
(21,32)-(21,34)
(22,7)-(24,62)
(22,7)-(24,62)
(22,7)-(24,62)
(22,7)-(24,62)
(22,13)-(22,21)
(23,16)-(23,25)
(23,16)-(23,61)
(23,28)-(23,37)
(23,28)-(23,61)
(23,28)-(23,61)
(23,28)-(23,61)
(23,38)-(23,39)
(23,41)-(23,56)
(23,41)-(23,56)
(23,41)-(23,61)
(23,41)-(23,61)
(23,41)-(23,61)
(23,42)-(23,48)
(23,42)-(23,55)
(23,53)-(23,55)
(23,57)-(23,58)
(23,59)-(23,61)
(24,18)-(24,27)
(24,30)-(24,39)
(24,30)-(24,62)
(24,30)-(24,62)
(24,40)-(24,41)
(24,43)-(24,58)
(24,43)-(24,58)
(24,43)-(24,62)
(24,43)-(24,62)
(24,43)-(24,62)
(24,44)-(24,50)
(24,44)-(24,57)
(24,55)-(24,57)
(24,59)-(24,60)
(24,61)-(24,62)
(25,5)-(27,52)
(25,17)-(25,22)
(25,20)-(25,22)
(26,5)-(27,52)
(26,16)-(26,24)
(26,16)-(26,44)
(26,16)-(26,44)
(26,26)-(26,38)
(26,26)-(26,44)
(26,26)-(26,44)
(26,26)-(26,44)
(26,39)-(26,41)
(26,42)-(26,44)
(27,19)-(27,33)
(27,19)-(27,45)
(27,19)-(27,45)
(27,19)-(27,45)
(27,34)-(27,35)
(27,36)-(27,40)
(27,41)-(27,45)
(28,15)-(28,18)
(28,15)-(28,33)
(28,15)-(28,33)
(28,20)-(28,27)
(28,20)-(28,33)
(28,20)-(28,33)
(28,28)-(28,30)
(28,31)-(28,33)
*)
