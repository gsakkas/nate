
let rec mulByDigit i l =
  match l with
  | [] -> []
  | h::t ->
      (match (mulByDigit i (List.rev (List.map (fun x  -> x * 10) t))) @
               [h * i]
       with
       | [] -> []
       | h::t ->
           let rec helper acc v = if v = 0 then acc else v mod 10 in
           helper [] h);;


(* fix

let rec mulByDigit i l =
  match l with
  | [] -> []
  | h::t ->
      (match (mulByDigit i (List.rev (List.map (fun x  -> x * 10) t))) @
               [h * i]
       with
       | [] -> []
       | h::t ->
           let rec helper acc v = if v = 0 then acc else [v mod 10] in
           helper [] h);;

*)

(* changed spans
(11,58)-(11,66)
*)

(* type error slice
(2,4)-(12,26)
(2,20)-(12,23)
(2,22)-(12,23)
(3,3)-(12,23)
(3,3)-(12,23)
(3,3)-(12,23)
(3,3)-(12,23)
(3,3)-(12,23)
(3,3)-(12,23)
(3,9)-(3,10)
(4,11)-(4,13)
(6,8)-(12,23)
(6,8)-(12,23)
(6,8)-(12,23)
(6,8)-(12,23)
(6,8)-(12,23)
(6,15)-(6,25)
(6,15)-(6,68)
(6,15)-(6,68)
(6,15)-(6,68)
(6,15)-(7,23)
(6,15)-(7,23)
(6,26)-(6,27)
(6,29)-(6,37)
(6,29)-(6,68)
(6,29)-(6,68)
(6,39)-(6,47)
(6,39)-(6,68)
(6,39)-(6,68)
(6,49)-(6,65)
(6,59)-(6,60)
(6,67)-(6,68)
(6,72)-(6,73)
(7,21)-(7,22)
(9,16)-(9,18)
(11,12)-(12,23)
(11,12)-(12,23)
(11,27)-(11,66)
(11,31)-(11,66)
(11,35)-(11,66)
(11,35)-(11,66)
(11,38)-(11,39)
(11,38)-(11,43)
(11,38)-(11,43)
(11,38)-(11,43)
(11,42)-(11,43)
(11,49)-(11,52)
(11,58)-(11,59)
(11,58)-(11,66)
(11,64)-(11,66)
(12,12)-(12,18)
(12,12)-(12,23)
(12,12)-(12,23)
(12,12)-(12,23)
(12,19)-(12,21)
(12,22)-(12,23)
*)
