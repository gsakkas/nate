
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match depth with
  | 0 -> let num = rand (1, 5) in if num > 3 then buildX () else buildY ()
  | 1 ->
      let num = rand (1, 10) in
      if (num mod 2) = 0
      then buildSine (build (rand, (depth - 1)))
      else buildCosine (build (rand, (depth - 1)))
  | 2 ->
      let num = rand (1, 3) in
      if (num mod 2) == 0
      then
        buildTimes
          ((buildSine (build (rand, (depth - 1)))),
            (build (rand, (depth - 1))))
      else
        buildTimes
          ((buildCosine (build (rand, (depth - 1)))),
            (build (rand, (depth - 1))))
  | 3 ->
      buildTimes
        (buildAverage
           ((build (rand, (depth - 1))), (build (rand, (depth - 1)))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match depth with
  | 0 -> let num = rand (1, 5) in if num > 3 then buildX () else buildY ()
  | 1 ->
      let num = rand (1, 10) in
      if (num mod 2) = 0
      then buildSine (build (rand, (depth - 1)))
      else buildCosine (build (rand, (depth - 1)))
  | 2 ->
      let num = rand (1, 3) in
      if (num mod 2) == 0
      then
        buildTimes
          ((buildSine (build (rand, (depth - 1)))),
            (build (rand, (depth - 1))))
      else
        buildTimes
          ((buildCosine (build (rand, (depth - 1)))),
            (build (rand, (depth - 1))))
  | 3 ->
      buildTimes
        ((buildAverage
            ((build (rand, (depth - 1))), (build (rand, (depth - 1))))),
          (build (rand, (depth - 1))));;

*)

(* changed spans
(44,10)-(44,22)
(44,10)-(45,66)
(45,14)-(45,19)
*)

(* type error slice
(11,4)-(11,46)
(11,19)-(11,43)
(11,37)-(11,39)
(11,41)-(11,43)
(13,4)-(13,31)
(13,17)-(13,29)
(13,21)-(13,29)
(13,28)-(13,29)
(15,4)-(15,27)
(15,15)-(15,25)
(15,19)-(15,25)
(15,24)-(15,25)
(17,4)-(17,42)
(17,17)-(17,39)
(17,26)-(17,39)
(17,33)-(17,35)
(17,37)-(17,39)
(19,4)-(19,23)
(19,12)-(19,21)
(19,12)-(19,21)
(19,17)-(19,21)
(21,4)-(21,23)
(21,12)-(21,21)
(21,12)-(21,21)
(21,17)-(21,21)
(23,16)-(45,66)
(24,3)-(45,66)
(24,3)-(45,66)
(24,3)-(45,66)
(24,3)-(45,66)
(24,9)-(24,14)
(25,10)-(25,75)
(25,10)-(25,75)
(25,20)-(25,24)
(25,20)-(25,30)
(25,20)-(25,30)
(25,26)-(25,27)
(25,26)-(25,30)
(25,29)-(25,30)
(25,35)-(25,75)
(25,35)-(25,75)
(25,38)-(25,41)
(25,38)-(25,45)
(25,38)-(25,45)
(25,38)-(25,45)
(25,44)-(25,45)
(25,51)-(25,57)
(25,51)-(25,60)
(25,58)-(25,60)
(25,66)-(25,72)
(25,66)-(25,75)
(25,73)-(25,75)
(27,7)-(30,48)
(27,7)-(30,48)
(27,17)-(27,21)
(27,17)-(27,28)
(27,23)-(27,24)
(27,23)-(27,28)
(27,26)-(27,28)
(28,7)-(30,48)
(28,7)-(30,48)
(28,11)-(28,14)
(28,11)-(28,20)
(28,11)-(28,25)
(28,11)-(28,25)
(28,19)-(28,20)
(28,24)-(28,25)
(29,12)-(29,21)
(29,12)-(29,46)
(29,12)-(29,46)
(29,23)-(29,28)
(29,23)-(29,46)
(29,23)-(29,46)
(29,30)-(29,34)
(29,30)-(29,46)
(29,37)-(29,42)
(29,37)-(29,46)
(29,37)-(29,46)
(29,45)-(29,46)
(30,12)-(30,23)
(30,12)-(30,48)
(30,25)-(30,30)
(30,25)-(30,48)
(30,32)-(30,36)
(30,32)-(30,48)
(30,39)-(30,44)
(30,39)-(30,48)
(30,47)-(30,48)
(32,7)-(41,37)
(32,7)-(41,37)
(32,17)-(32,21)
(32,17)-(32,27)
(32,23)-(32,24)
(32,23)-(32,27)
(32,26)-(32,27)
(33,7)-(41,37)
(33,7)-(41,37)
(33,11)-(33,14)
(33,11)-(33,20)
(33,11)-(33,26)
(33,11)-(33,26)
(33,19)-(33,20)
(33,25)-(33,26)
(35,9)-(35,19)
(35,9)-(37,37)
(35,9)-(37,37)
(36,13)-(36,22)
(36,13)-(36,47)
(36,13)-(37,37)
(36,24)-(36,29)
(36,24)-(36,47)
(36,31)-(36,35)
(36,31)-(36,47)
(36,38)-(36,43)
(36,38)-(36,47)
(36,46)-(36,47)
(37,14)-(37,19)
(37,14)-(37,37)
(37,21)-(37,25)
(37,21)-(37,37)
(37,28)-(37,33)
(37,28)-(37,37)
(37,36)-(37,37)
(39,9)-(39,19)
(39,9)-(41,37)
(40,13)-(40,24)
(40,13)-(40,49)
(40,13)-(41,37)
(40,26)-(40,31)
(40,26)-(40,49)
(40,33)-(40,37)
(40,33)-(40,49)
(40,40)-(40,45)
(40,40)-(40,49)
(40,48)-(40,49)
(41,14)-(41,19)
(41,14)-(41,37)
(41,21)-(41,25)
(41,21)-(41,37)
(41,28)-(41,33)
(41,28)-(41,37)
(41,36)-(41,37)
(43,7)-(43,17)
(43,7)-(45,66)
(44,10)-(44,22)
(44,10)-(45,66)
*)
