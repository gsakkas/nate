
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match rand depth with
  | (r,depth) ->
      (match r (0, 6) with
       | 0 -> buildX ()
       | 1 -> buildY ()
       | 2 -> buildSine (build (r, (depth - 1)))
       | 3 -> buildCosine (build (r, (depth - 1)))
       | 4 ->
           buildAverage ((build (r, (depth - 1))), (build (r, (depth - 1))))
       | 5 -> buildTimes ((build (r, (depth - 1))), (build (r, (depth - 1))))
       | 6 ->
           buildThresh
             ((build (r, (depth - 1))), (build (r, (depth - 1))),
               (build (r, (depth - 1))), (build (r, (depth - 1)))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr;;

let buildAverage (e1,e2) = Average (e1, e2);;

let buildCosine e = Cosine e;;

let buildSine e = Sine e;;

let buildThresh (a,b,a_less,b_less) = Thresh (a, b, a_less, b_less);;

let buildTimes (e1,e2) = Times (e1, e2);;

let buildX () = VarX;;

let buildY () = VarY;;

let rec build (rand,depth) =
  match (rand, depth) with
  | (r,0) -> if (r (0, 1)) = 0 then buildX () else buildY ()
  | (r,depth) ->
      let r = rand (0, 7) in
      (match r with
       | 0 -> buildX ()
       | 1 -> buildY ()
       | 2 -> buildSine (build (rand, (depth - 1)))
       | 3 -> buildCosine (build (rand, (depth - 1)))
       | 4 ->
           buildAverage
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | 5 ->
           buildTimes
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))))
       | _ ->
           buildThresh
             ((build (rand, (depth - 1))), (build (rand, (depth - 1))),
               (build (rand, (depth - 1))), (build (rand, (depth - 1)))));;

*)

(* changed spans
(26,3)-(39,63)
(26,9)-(26,13)
(26,9)-(26,19)
(28,8)-(39,63)
(28,14)-(28,21)
(28,20)-(28,21)
(29,15)-(29,24)
(31,15)-(31,24)
(31,15)-(31,46)
(31,33)-(31,34)
(32,35)-(32,36)
(34,34)-(34,35)
(34,60)-(34,61)
(35,35)-(35,36)
(35,61)-(35,62)
(38,23)-(38,24)
(38,49)-(38,50)
(39,17)-(39,22)
(39,24)-(39,25)
(39,24)-(39,37)
(39,28)-(39,33)
(39,28)-(39,37)
(39,36)-(39,37)
(39,43)-(39,48)
(39,50)-(39,51)
(39,50)-(39,63)
(39,54)-(39,59)
(39,54)-(39,63)
(39,62)-(39,63)
*)

(* type error slice
(11,4)-(11,46)
(11,19)-(11,43)
(11,28)-(11,43)
(11,37)-(11,39)
(11,41)-(11,43)
(13,4)-(13,31)
(13,17)-(13,29)
(13,21)-(13,29)
(13,28)-(13,29)
(15,4)-(15,27)
(15,15)-(15,25)
(15,19)-(15,25)
(15,24)-(15,25)
(17,4)-(17,70)
(17,18)-(17,67)
(17,39)-(17,67)
(17,47)-(17,48)
(17,50)-(17,51)
(17,53)-(17,59)
(17,61)-(17,67)
(19,4)-(19,42)
(19,17)-(19,39)
(19,26)-(19,39)
(19,33)-(19,35)
(19,37)-(19,39)
(21,4)-(21,23)
(21,12)-(21,21)
(21,12)-(21,21)
(21,17)-(21,21)
(23,4)-(23,23)
(23,12)-(23,21)
(23,12)-(23,21)
(23,17)-(23,21)
(25,4)-(39,70)
(25,16)-(39,63)
(26,3)-(39,63)
(26,3)-(39,63)
(26,9)-(26,13)
(26,9)-(26,19)
(26,9)-(26,19)
(26,14)-(26,19)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,8)-(39,63)
(28,14)-(28,15)
(28,14)-(28,21)
(28,14)-(28,21)
(28,17)-(28,18)
(28,17)-(28,21)
(28,20)-(28,21)
(29,15)-(29,21)
(29,15)-(29,24)
(29,22)-(29,24)
(30,15)-(30,21)
(30,15)-(30,24)
(30,22)-(30,24)
(31,15)-(31,24)
(31,15)-(31,46)
(31,15)-(31,46)
(31,26)-(31,31)
(31,26)-(31,46)
(31,26)-(31,46)
(31,33)-(31,34)
(31,33)-(31,46)
(31,37)-(31,42)
(31,37)-(31,46)
(31,37)-(31,46)
(31,45)-(31,46)
(32,15)-(32,26)
(32,15)-(32,48)
(32,28)-(32,33)
(32,28)-(32,48)
(32,28)-(32,48)
(32,35)-(32,36)
(32,35)-(32,48)
(32,39)-(32,44)
(32,39)-(32,48)
(32,47)-(32,48)
(34,12)-(34,24)
(34,12)-(34,73)
(34,27)-(34,32)
(34,27)-(34,47)
(34,27)-(34,47)
(34,27)-(34,73)
(34,34)-(34,35)
(34,34)-(34,47)
(34,38)-(34,43)
(34,38)-(34,47)
(34,46)-(34,47)
(34,53)-(34,58)
(34,53)-(34,73)
(34,53)-(34,73)
(34,60)-(34,61)
(34,60)-(34,73)
(34,64)-(34,69)
(34,64)-(34,73)
(34,72)-(34,73)
(35,15)-(35,25)
(35,15)-(35,74)
(35,28)-(35,33)
(35,28)-(35,48)
(35,28)-(35,48)
(35,28)-(35,74)
(35,35)-(35,36)
(35,35)-(35,48)
(35,39)-(35,44)
(35,39)-(35,48)
(35,47)-(35,48)
(35,54)-(35,59)
(35,54)-(35,74)
(35,54)-(35,74)
(35,61)-(35,62)
(35,61)-(35,74)
(35,65)-(35,70)
(35,65)-(35,74)
(35,73)-(35,74)
(37,12)-(37,23)
(37,12)-(39,63)
(38,16)-(38,21)
(38,16)-(38,36)
(38,16)-(38,36)
(38,16)-(39,63)
(38,23)-(38,24)
(38,23)-(38,36)
(38,27)-(38,32)
(38,27)-(38,36)
(38,35)-(38,36)
(38,42)-(38,47)
(38,42)-(38,62)
(38,42)-(38,62)
(38,49)-(38,50)
(38,49)-(38,62)
(38,53)-(38,58)
(38,53)-(38,62)
(38,61)-(38,62)
(39,17)-(39,22)
(39,17)-(39,37)
(39,17)-(39,37)
(39,24)-(39,25)
(39,24)-(39,37)
(39,28)-(39,33)
(39,28)-(39,37)
(39,36)-(39,37)
(39,43)-(39,48)
(39,43)-(39,63)
(39,43)-(39,63)
(39,50)-(39,51)
(39,50)-(39,63)
(39,54)-(39,59)
(39,54)-(39,63)
(39,62)-(39,63)
*)
