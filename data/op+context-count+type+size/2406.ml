
type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Squared of expr
  | Flatten of expr* expr* expr;;

let rec exprToString e =
  match e with
  | VarX  -> "x"
  | VarY  -> "y"
  | Sine e -> "sin(pi*" ^ ((exprToString e) ^ ")")
  | Cosine e -> "cos(pi*" ^ ((exprToString e) ^ ")")
  | Average (e1,e2) ->
      "((" ^ ((exprToString e1) ^ ("+" ^ ((exprToString e2) ^ ")/2)")))
  | Times (e1,e2) -> (exprToString e1) ^ ("*" ^ (exprToString e2))
  | Thresh (e1,e2,e3,e4) ->
      "(" ^
        ((exprToString e1) ^
           ("<" ^
              ((exprToString e2) ^
                 ("?" ^
                    ((exprToString e3) ^ (":" ^ ((exprToString e4) ^ ")")))))))
  | Squared e -> "(" ^ ((exprToString e) ^ ")^(2)")
  | Flatten (e1,e2,e3) ->
      ("(" exprToString e1) ^
        ("/" ^ ((exprToString e2) ^ ("/" ^ ((exprToString e3) ^ ")"))));;


(* fix

type expr =
  | VarX
  | VarY
  | Sine of expr
  | Cosine of expr
  | Average of expr* expr
  | Times of expr* expr
  | Thresh of expr* expr* expr* expr
  | Squared of expr
  | Flatten of expr* expr* expr;;

let rec exprToString e =
  match e with
  | VarX  -> "x"
  | VarY  -> "y"
  | Sine e -> "sin(pi*" ^ ((exprToString e) ^ ")")
  | Cosine e -> "cos(pi*" ^ ((exprToString e) ^ ")")
  | Average (e1,e2) ->
      "((" ^ ((exprToString e1) ^ ("+" ^ ((exprToString e2) ^ ")/2)")))
  | Times (e1,e2) -> (exprToString e1) ^ ("*" ^ (exprToString e2))
  | Thresh (e1,e2,e3,e4) ->
      "(" ^
        ((exprToString e1) ^
           ("<" ^
              ((exprToString e2) ^
                 ("?" ^
                    ((exprToString e3) ^ (":" ^ ((exprToString e4) ^ ")")))))))
  | Squared e -> "(" ^ ((exprToString e) ^ ")^(2)")
  | Flatten (e1,e2,e3) ->
      "(" ^
        ((exprToString e1) ^
           ("/" ^ ((exprToString e2) ^ ("/" ^ ((exprToString e3) ^ ")")))));;

*)

(* changed spans
(31,8)-(31,27)
(31,12)-(31,24)
*)

(* type error slice
(13,22)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,3)-(32,68)
(14,9)-(14,10)
(17,15)-(17,24)
(17,15)-(17,50)
(17,25)-(17,26)
(17,29)-(17,41)
(17,29)-(17,43)
(17,29)-(17,43)
(17,29)-(17,50)
(17,29)-(17,50)
(17,42)-(17,43)
(17,45)-(17,46)
(17,47)-(17,50)
(18,17)-(18,26)
(18,17)-(18,52)
(18,27)-(18,28)
(18,31)-(18,43)
(18,31)-(18,45)
(18,31)-(18,52)
(18,44)-(18,45)
(18,47)-(18,48)
(18,49)-(18,52)
(20,7)-(20,11)
(20,7)-(20,69)
(20,12)-(20,13)
(20,16)-(20,28)
(20,16)-(20,31)
(20,16)-(20,69)
(20,29)-(20,31)
(20,33)-(20,34)
(20,36)-(20,39)
(20,36)-(20,69)
(20,40)-(20,41)
(20,44)-(20,56)
(20,44)-(20,59)
(20,44)-(20,69)
(20,57)-(20,59)
(20,61)-(20,62)
(20,63)-(20,69)
(21,23)-(21,35)
(21,23)-(21,38)
(21,23)-(21,65)
(21,36)-(21,38)
(21,40)-(21,41)
(21,43)-(21,46)
(21,43)-(21,65)
(21,47)-(21,48)
(21,50)-(21,62)
(21,50)-(21,65)
(21,63)-(21,65)
(23,7)-(23,10)
(23,7)-(28,73)
(23,11)-(23,12)
(24,11)-(24,23)
(24,11)-(24,26)
(24,11)-(28,73)
(24,24)-(24,26)
(24,28)-(24,29)
(25,13)-(25,16)
(25,13)-(28,73)
(25,17)-(25,18)
(26,17)-(26,29)
(26,17)-(26,32)
(26,17)-(28,73)
(26,30)-(26,32)
(26,34)-(26,35)
(27,19)-(27,22)
(27,19)-(28,73)
(27,23)-(27,24)
(28,23)-(28,35)
(28,23)-(28,38)
(28,23)-(28,73)
(28,36)-(28,38)
(28,40)-(28,41)
(28,43)-(28,46)
(28,43)-(28,73)
(28,47)-(28,48)
(28,51)-(28,63)
(28,51)-(28,66)
(28,51)-(28,73)
(28,64)-(28,66)
(28,68)-(28,69)
(28,70)-(28,73)
(29,18)-(29,21)
(29,18)-(29,51)
(29,22)-(29,23)
(29,26)-(29,38)
(29,26)-(29,40)
(29,26)-(29,51)
(29,39)-(29,40)
(29,42)-(29,43)
(29,44)-(29,51)
(31,8)-(31,11)
(31,8)-(31,27)
(31,12)-(31,24)
(31,25)-(31,27)
(31,29)-(31,30)
*)
