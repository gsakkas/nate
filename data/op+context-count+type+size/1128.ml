
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = if a = "a" then a ^ (x ^ sep) in
      let base = "" in let l = sl in List.fold_left f base l;;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = a ^ (x ^ sep) in
      let base = "" in let l = sl in List.fold_left f base l;;

*)

(* changed spans
(6,19)-(6,47)
(6,22)-(6,23)
(6,22)-(6,29)
(6,26)-(6,29)
*)

(* type error slice
(2,4)-(7,63)
(2,19)-(7,61)
(2,23)-(7,61)
(3,3)-(7,61)
(3,3)-(7,61)
(3,3)-(7,61)
(3,3)-(7,61)
(3,3)-(7,61)
(3,9)-(3,11)
(6,7)-(7,61)
(6,13)-(6,47)
(6,15)-(6,47)
(6,19)-(6,47)
(6,19)-(6,47)
(6,19)-(6,47)
(6,22)-(6,23)
(6,22)-(6,29)
(6,22)-(6,29)
(6,22)-(6,29)
(6,26)-(6,29)
(6,35)-(6,36)
(6,35)-(6,47)
(6,37)-(6,38)
(6,40)-(6,41)
(6,40)-(6,47)
(6,40)-(6,47)
(6,40)-(6,47)
(6,42)-(6,43)
(6,44)-(6,47)
(7,24)-(7,61)
(7,32)-(7,34)
(7,38)-(7,52)
(7,38)-(7,61)
(7,38)-(7,61)
(7,38)-(7,61)
(7,53)-(7,54)
(7,60)-(7,61)
*)
