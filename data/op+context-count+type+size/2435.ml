
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = h ^ (sep ^ (sepConcat (sep t))) in
      let base = "" in let l = t in List.fold_left f base l;;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = h ^ sep in
      let base = "" in let l = t in List.fold_left f base l;;

*)

(* changed spans
(6,24)-(6,47)
(6,28)-(6,29)
(6,31)-(6,40)
(6,31)-(6,47)
(6,42)-(6,45)
(6,42)-(6,47)
(6,46)-(6,47)
*)

(* type error slice
(2,4)-(7,62)
(2,19)-(7,60)
(2,23)-(7,60)
(3,3)-(7,60)
(3,3)-(7,60)
(3,3)-(7,60)
(3,3)-(7,60)
(3,3)-(7,60)
(3,3)-(7,60)
(3,9)-(3,11)
(4,11)-(4,13)
(6,7)-(7,60)
(6,7)-(7,60)
(6,13)-(6,47)
(6,15)-(6,47)
(6,19)-(6,20)
(6,19)-(6,47)
(6,19)-(6,47)
(6,21)-(6,22)
(6,24)-(6,27)
(6,24)-(6,47)
(6,24)-(6,47)
(6,24)-(6,47)
(6,28)-(6,29)
(6,31)-(6,40)
(6,31)-(6,47)
(6,31)-(6,47)
(6,42)-(6,45)
(6,42)-(6,47)
(6,42)-(6,47)
(6,46)-(6,47)
(7,7)-(7,60)
(7,7)-(7,60)
(7,18)-(7,20)
(7,24)-(7,60)
(7,24)-(7,60)
(7,32)-(7,33)
(7,37)-(7,51)
(7,37)-(7,60)
(7,37)-(7,60)
(7,37)-(7,60)
(7,37)-(7,60)
(7,52)-(7,53)
(7,54)-(7,58)
(7,59)-(7,60)
*)
