
let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = (List.rev t) ^ a in
      let base = h ^ sep in let l = sl in List.fold_left f base l;;


(* fix

let rec sepConcat sep sl =
  match sl with
  | [] -> ""
  | h::t ->
      let f a x = x ^ a in
      let base = h ^ sep in let l = sl in List.fold_left f base l;;

*)

(* changed spans
(6,20)-(6,28)
(6,20)-(6,30)
(6,29)-(6,30)
*)

(* type error slice
(2,4)-(7,68)
(2,19)-(7,66)
(2,23)-(7,66)
(3,3)-(7,66)
(3,3)-(7,66)
(3,3)-(7,66)
(3,3)-(7,66)
(3,9)-(3,11)
(6,7)-(7,66)
(6,13)-(6,35)
(6,15)-(6,35)
(6,20)-(6,28)
(6,20)-(6,30)
(6,20)-(6,30)
(6,20)-(6,35)
(6,20)-(6,35)
(6,29)-(6,30)
(6,32)-(6,33)
(6,34)-(6,35)
(7,18)-(7,19)
(7,22)-(7,25)
(7,29)-(7,66)
(7,37)-(7,39)
(7,43)-(7,57)
(7,43)-(7,66)
(7,43)-(7,66)
(7,43)-(7,66)
(7,58)-(7,59)
(7,65)-(7,66)
*)
